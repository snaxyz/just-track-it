name: Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-west-2

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.ECR_REGISTRY }}/agent:${{ github.sha }} -f apps/agent/Dockerfile .

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push Docker image
        run: |
          docker push ${{ secrets.ECR_REGISTRY }}/agent:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.0"

      - name: Terraform Init
        working-directory: ./infrastructure
        run: terraform init

      - name: Terraform Apply
        working-directory: ./infrastructure
        run: terraform apply -auto-approve -input=false

      - name: Register ECS Task Definition
        run: |
          TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition agent-production || echo '{}')
          NEW_TASK_DEF=$(echo $TASK_DEFINITION | jq --arg IMAGE "${{ secrets.ECR_REGISTRY }}/agent:${{ github.sha }}" '.taskDefinition | .containerDefinitions[0].image = $IMAGE | del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)')
          aws ecs register-task-definition --cli-input-json "$NEW_TASK_DEF"

      - name: Update ECS Service
        run: |
          aws ecs update-service --cluster just-track-it-production --service agent-production --force-new-deployment
