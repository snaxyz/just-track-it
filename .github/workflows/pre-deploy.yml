name: Pre-Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  pre-deploy:
    name: Pre-Deploy Infrastructure
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    outputs:
      agent_ecr_url: ${{ steps.get_agent_ecr_url.outputs.agent_ecr_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.CICD_DEPLOYMENT_ROLE }}
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.0"

      - name: Terraform Init
        working-directory: ./infrastructure
        run: terraform init

      - name: Terraform Apply
        working-directory: ./infrastructure
        run: terraform apply -target=module.pre_deploy -auto-approve

      - name: Get Agent ECR Repository URL
        id: get_agent_ecr_url
        working-directory: ./infrastructure
        run: echo "agent_ecr_url=$(terraform output -raw agent_ecr_repository_url)" >> $GITHUB_OUTPUT

  build-and-push-agent:
    name: Build and Push Agent Image
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: pre-deploy

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.CICD_DEPLOYMENT_ROLE }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Agent image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ needs.pre-deploy.outputs.agent_ecr_url }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker buildx create --use
          docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache-new --tag $REPOSITORY:$IMAGE_TAG -f apps/agent/Dockerfile .
          docker tag $REPOSITORY:$IMAGE_TAG $REPOSITORY:latest
          docker push $REPOSITORY:$IMAGE_TAG
          docker push $REPOSITORY:latest
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Create image info file
        run: echo "IMAGE_URL=${{ needs.pre-deploy.outputs.agent_ecr_url }}:${{ github.sha }}" > image-info.txt

      - name: Upload image info artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-info
          path: image-info.txt
