name: Pre-Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  pre-deploy:
    name: Pre-Deploy Infrastructure
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.CICD_DEPLOYMENT_ROLE }}
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.0"

      - name: Terraform Init
        working-directory: ./infrastructure
        run: terraform init

      - name: Terraform Apply
        working-directory: ./infrastructure
        run: terraform apply -target=module.pre_deploy -auto-approve

  build-and-push-agent:
    name: Build and Push Agent Image
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: pre-deploy

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.CICD_DEPLOYMENT_ROLE }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Agent image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: just-track-it-agent
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f apps/agent/Dockerfile .
          docker tag $REGISTRY/$REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:latest
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:latest
